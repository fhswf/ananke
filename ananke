#!/usr/bin/env python3

import argparse
import os
import subprocess


IMG_DEF_DIR = 'images'
IMG_PREFIX = 'ananke-'

CONT_DATA_DIR = 'containers'
CONT_DATA_IGNORE = 'template'

BASE_PATH = os.path.abspath(os.path.dirname(__file__))

COLOR_RESET = '\x1b[0m'
COLOR_BOLD = '\x1b[1m'


def shell(cmd):
    '''
    Run a shell command and return its output.

    Parameters
    ----------
    cmd : list[str]
        Command to execute. First item is command. Others are arguments.

    Returns
    -------
    list[str]
        List of lines returned on stdout.
    '''

    result = subprocess.run(cmd, capture_output=True, text=True)
    return result.stdout.split('\n')


def subcmd_list(args):

    # list available image definitions
    print(f'{COLOR_BOLD}available image definitions:{COLOR_RESET}')
    path = f'{BASE_PATH}/{IMG_DEF_DIR}'
    n_found = 0
    for name in os.listdir(path):
        if name.startswith(IMG_PREFIX) and os.path.isdir(f'{path}/{name}'):
            print(f'  - {name}')
            n_found += 1
    if n_found == 0:
        print('  none')

    # list available images
    print(f'{COLOR_BOLD}available/built images{COLOR_RESET} ("podman image ls" for details):')
    output = shell('podman image ls'.split())
    n_found = 0
    for line in output[1:-1]:  # first line is header, last line is empty
        repo_and_name, tag, _ = line.split(maxsplit=2)
        repo, name = repo_and_name.rsplit('/', maxsplit=1)
        if name.startswith(IMG_PREFIX):
            if tag != '<none>':
                print(f'  - {repo}/{name}:{tag}')
            else:
                print(f'  - {repo}/{name} (no tag)')
            n_found += 1
    if n_found == 0:
        print('  none')

    # list containers
    print(f'{COLOR_BOLD}containers{COLOR_RESET} ("podman ps -a" for details):')
    output = shell('podman ps -a'.split())
    n_found = 0
    for line in output[1:-1]:  # first line is header, last line is empty
        _, img, _ = line.split(maxsplit=2)
        name = line.rsplit(maxsplit=1)
        if ':' in img:
            repo_and_img_name, tag = img.rsplit(':', maxsplit=1)
        else:
            repo_and_img_name, tag = img, ''
        repo, img_name = repo_and_img_name.rsplit('/', maxsplit=1)
        if img_name.startswith(IMG_PREFIX):
            if tag != '':
                print(f'  - {name} (from image {repo}/{name}:{tag})')
            else:
                print(f'  - {name} (from image {repo}/{name})')
            n_found += 1
    if n_found == 0:
        print('  none')


def subcmd_build(args):

    print('build')


def main():

    # intialize argument parser
    parser = argparse.ArgumentParser()
    subparsers = parser.add_subparsers(
        title='subcommands',
        description='build, list ("ananke SUBCOMMAND -h" for details)'
    )

    # subparser for build command
    parser_build = subparsers.add_parser('build', help='build an image')
    parser_build.add_argument('-n', '--name', help='name of built image')
    parser_build.add_argument('image_def', metavar='IMAGE_DEFINITION_DIR', help='directory with image definition')
    parser_build.set_defaults(func=subcmd_build)

    # subparser for list command
    parser_list = subparsers.add_parser('list', help='list images and containers')
    parser_list.set_defaults(func=subcmd_list)

    # execute command
    args = parser.parse_args()
    if 'func' in args:
        args.func(args)
    else:
        parser.print_usage()


if __name__ == '__main__':
    main()
